import type { ReadableStream } from 'node:stream/web';
import type { AgentRequest, Json, JsonObject, ReadableDataType, TriggerType } from '../types';
import { DataHandler } from './data';
/**
 * Handles agent requests and provides methods to access request data in various formats
 */
export default class AgentRequestHandler implements AgentRequest {
    private readonly _trigger;
    private readonly _datahandler;
    private readonly _metadata;
    /**
     * constructor
     *
     * @param trigger - The trigger of the request
     * @param stream - The stream of the request
     * @param contentType - The content type of the request
     * @param metadata - The metadata of the request
     */
    constructor(trigger: TriggerType, stream: ReadableStream<ReadableDataType> | AsyncIterable<ReadableDataType>, contentType: string, metadata: JsonObject);
    /**
     * get the trigger of the request
     */
    get trigger(): TriggerType;
    /**
     * get the data of the request
     */
    get data(): DataHandler;
    /**
     * get the metadata object of the request
     */
    get metadata(): JsonObject;
    /**
     * get the metadata value of the request
     */
    get(key: string, defaultValue?: Json): import("..").JsonPrimitive;
}
//# sourceMappingURL=request.d.ts.map